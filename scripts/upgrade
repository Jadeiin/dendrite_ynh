#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_go
source /usr/share/yunohost/helpers

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="stop" --line_match="Dendrite is exiting now" --log_path="systemd"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if ! groups $app | grep -q 'ssl-cert'; then
        adduser $app ssl-cert
fi

# Define $server_name if not already defined
if [ -z $server_name ]; then
   server_name=$domain
   ynh_app_setting_set --app=$app --key=server_name --value=$domain
fi

# Load up registration variables
if [[ $registration -eq 1 ]]
then
        registration_disabled="false"
        really_enable_open_registration="--really-enable-open-registration"
else
        registration_disabled="true"
        really_enable_open_registration=""
        ynh_app_setting_set --app=$app --key=registration --value=0
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=3

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/build" --keep="dendrite.yaml" --full_replace
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:root "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create .well-known redirection for access by federation
if yunohost --output-as plain domain list | grep -q "^$server_name$"
then
    ynh_add_config --template="server_name.conf" --destination="/etc/nginx/conf.d/${server_name}.d/${app}_server_name.conf"
fi

#=================================================
# SPECIFIC UPGRADE
#=================================================
# BUILDING SOURCES AND SETTING UP THE SERVER
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Building the sources (it will take some time)..." --weight=6

	ynh_exec_warn_less ynh_install_go --go_version=$GO_VERSION

	pushd "$install_dir/build"
		# Build the sources
		ynh_use_go
		export PATH="$PATH"
		export GOPATH="$install_dir/build/go"
		export GOCACHE="$install_dir/build/.cache"
		export CGO_ENABLED=1
		ynh_exec_warn_less go build -trimpath -v -o "$install_dir/bin/" ./cmd/dendrite
		ynh_exec_warn_less go build -trimpath -v -o "$install_dir/bin/" ./cmd/create-account
		ynh_exec_warn_less go build -trimpath -v -o "$install_dir/bin/" ./cmd/generate-keys
	popd

 	ynh_secure_remove --file="$install_dir/build"
	ynh_remove_go
fi

chown -R $app:root "$install_dir"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

ynh_add_config --template="../conf/dendrite.yaml" --destination="$install_dir/dendrite.yaml"

chmod 400 "$install_dir/dendrite.yaml"
chown $app:$app "$install_dir/dendrite.yaml"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..." --weight=1

mkdir -p /var/log/$app
chown -R $app:root /var/log/$app

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add $app --description="Dendrite Matrix homeserver" --log="/var/log/$app/$app.log" --needs_exposed_ports "$port_tls"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name=$app --action="start" --line_match="Starting external listener" --log_path="systemd"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
